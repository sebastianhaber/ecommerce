{"version":3,"sources":["components/Product/Functions.js","components/Product/Product.js","components/Navbar/Navbar.js","lib/commerce.js","views/checkout/Review.js","views/checkout/Payment.js","assets/undraw_Done_re_oak4.svg","views/checkout/Confirmation.js","views/checkout/Checkout.js","assets/undraw_empty_xct9.svg","views/cart/item/Item.js","components/utils/Loader.js","views/cart/Cart.js","views/item/Item.js","App.js","index.js"],"names":["ShowGroupsIfExists","variantGroups","variant","setVariant","colorScheme","map","group","my","name","options","size","minw","h","px","mx","bgColor","id","fontSize","cursor","onClick","Product","product","context","useContext","CommerceContext","useState","useEffect","variant_groups","length","m","maxW","w","minH","borderRadius","borderWidth","overflow","userSelect","position","p","pos","src","media","source","alt","objectFit","is","sold_out","top","left","justifyContent","alignItems","fontWeight","flexDir","as","Link","to","permalink","isTruncated","textColor","dangerouslySetInnerHTML","__html","description","price","formatted_with_code","_active","transform","checkBeforeAddingToCart","label","backgroundColor","Add","Navbar","cart","zIndex","boxShadow","icon","color","maxH","line_items","ml","subtotal","commerce","Commerce","process","Review","checkoutToken","live","item","selected_options","option","group_name","opt","option_name","group_id","quantity","stripePromise","loadStripe","Payment","setStep","shippingData","onCaptureCheckout","isLoading","setLoading","toast","useToast","handleSubmit","event","elements","stripe","a","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","type","card","error","paymentMethod","title","message","status","duration","isClosable","orderData","customer","firstname","lastname","email","fulfillment","shipping_method","shippingOption","payment","gateway","payment_method_id","console","log","onSubmit","e","isDisabled","Confirmation","Illustration","CustomInput","inputType","placeholder","helperText","register","isRequired","Checkout","step","setCheckoutToken","setShippingData","useForm","checkout","generateToken","token","ClientInfo","data","target","value","handleCheckValue","border","py","thickness","flex","Item","mr","loading","flexWrap","raw","right","handleUpdateItem","Loader","Cart","items","hasArrow","handleClearCart","Delete","EmptySVG","textTransform","borderColor","useParams","setData","getItemData","products","retrieve","Object","keys","Flex","mt","objectPosition","React","createContext","App","setProducts","setCart","order","setOrder","fetchProducts","list","fetchCart","res","refreshCart","refresh","newCart","handleAddToCart","productId","add","empty","handleCaptureCheckout","checkoutTokenID","newOrder","capture","incomingOrder","update","Provider","isSoldOut","variantInfo","onClearCart","exact","path","spacing","minChildWidth","justifyItems","active","onAddToCart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79e5c0c1.chunk.js","sourcesContent":["import { Circle, Flex, Text } from \"@chakra-ui/react\"\r\n\r\nexport const ShowGroupsIfExists = (variantGroups, variant, setVariant, colorScheme) => {\r\n    if (variantGroups) {\r\n        return variantGroups.map(group => (\r\n            <Flex key={group.id} my='2'>\r\n                <Text>\r\n                    {group.name === 'size' && 'Rozmiary:'}\r\n                    {group.name === 'colors' && 'Kolory:'}\r\n                </Text>\r\n                {group.options.map(size => (\r\n                    <Circle\r\n                        minw='25px'\r\n                        h='25px'\r\n                        px='1'\r\n                        mx='2'\r\n                        bgColor={variant.id === size.id ? colorScheme + `.100` : colorScheme + `.50`}\r\n                        fontSize='xs'\r\n                        cursor='pointer'\r\n                        onClick={()=>setVariant(size)}\r\n                        key={size.id}>\r\n                            {size.name}\r\n                    </Circle>\r\n                ))}\r\n            </Flex>\r\n        ))\r\n    }\r\n    return null;\r\n}","import { Box, Image, Circle, Tooltip, Text, Flex, Spacer } from '@chakra-ui/react';\r\nimport { AddIcon } from '@chakra-ui/icons'\r\nimport { CommerceContext } from '../../App';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ShowGroupsIfExists } from './Functions';\r\n\r\nexport default function Product({product}) {\r\n\tconst context = useContext(CommerceContext)\r\n\tconst [variant, setVariant] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (product.variant_groups.length > 0) {\r\n\t\t\tproduct.variant_groups.map(group => group.name && setVariant(group.options[0]));\r\n\t\t}\r\n\t}, [product.variant_groups])\r\n\r\n    return (\r\n        <Box\r\n            m='5'\r\n\t\t\tmaxW=\"300px\"\r\n\t\t\tw='100%'\r\n\t\t\tminH='400px'\r\n\t\t\tborderRadius=\"lg\"\r\n\t\t\tborderWidth='1px'\r\n\t\t\toverflow=\"hidden\"\r\n\t\t\tuserSelect='none'\r\n\t\t\tposition='relative'>\r\n\t\t\t<Box h='300px' p='2' pos='relative' overflow='hidden'>\r\n\t\t\t\t<Image\r\n\t\t\t\t\tsrc={product.media.source}\r\n\t\t\t\t\talt={product.name}\r\n\t\t\t\t\tw='100%'\r\n\t\t\t\t\th='100%'\r\n\t\t\t\t\tborderRadius='lg'\r\n\t\t\t\t\tobjectFit='cover'\r\n\t\t\t\t/>\r\n\t\t\t\t{ product.is.sold_out && (\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tw='100%'\r\n\t\t\t\t\t\th='100%'\r\n\t\t\t\t\t\tborderRadius='lg'\r\n\t\t\t\t\t\tpos='absolute'\r\n\t\t\t\t\t\ttop='0'\r\n\t\t\t\t\t\tleft='0'\r\n\t\t\t\t\t\tjustifyContent='center'\r\n\t\t\t\t\t\talignItems='center'\r\n\t\t\t\t\t\tbgColor='rgba(255,255,255,.6)' >\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tfontWeight='bold'\r\n\t\t\t\t\t\t\tfontSize='lg'>\r\n\t\t\t\t\t\t\tWyprzedane\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t)}\r\n\t\t\t</Box>\r\n\t\t\t<Flex\r\n\t\t\t\tflexDir='column'\r\n\t\t\t\tpx=\"6\"\r\n\t\t\t\th='calc(100% - 300px)'>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tas={Link}\r\n\t\t\t\t\tto={`/przedmiot/` + product.permalink}\r\n\t\t\t\t\tfontWeight=\"semibold\"\r\n\t\t\t\t\tfontSize='xl'\r\n\t\t\t\t\tisTruncated>\r\n\t\t\t\t\t{product.name}\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tflexDir='column'\r\n\t\t\t\t\th='100%'\r\n\t\t\t\t\tjustifyContent='space-between'>\r\n\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tfontSize='sm'\r\n\t\t\t\t\t\ttextColor='gray.500'\r\n\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: product.description }} />\r\n\r\n\t\t\t\t\t\t{ShowGroupsIfExists(product.variant_groups, variant, setVariant, context.colorScheme)}\r\n\r\n\t\t\t\t\t<Spacer />\r\n\r\n\t\t\t\t\t<Flex justifyContent='space-between' alignItems='center'>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tfontSize='lg'\r\n\t\t\t\t\t\t\tfontWeight='bold'\r\n\t\t\t\t\t\t\tmy='5'>\r\n\t\t\t\t\t\t\t{product.price.formatted_with_code}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t_active={{\r\n                                transform: 'scale(0.9)',\r\n                            }}\r\n\t\t\t\t\t\t\tcursor={product.is.sold_out ? 'not-allowed' : 'pointer'}\r\n\t\t\t\t\t\t\tonClick={() => context.checkBeforeAddingToCart(product.id, product.variant_groups, variant, product.is.sold_out)}>\r\n\t\t\t\t\t\t\t<Tooltip label='Dodaj do koszyka'>\r\n\t\t\t\t\t\t\t\t<Circle backgroundColor='gray.300' p='2'>\r\n\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t</Circle>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t</Box>\r\n    )\r\n}\r\n","import { Badge, Box, Circle, Flex, Spacer, Text } from '@chakra-ui/react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CommerceContext } from '../../App';\r\n\r\nexport default function Navbar({ cart }) {\r\n    const context = useContext(CommerceContext);\r\n    \r\n    if (!cart) return 'Ładowanie...';\r\n\r\n    return (\r\n        <Flex\r\n            backgroundColor={context.colorScheme + `.50`}\r\n            p='5'\r\n            pos='sticky'\r\n            top='0'\r\n            zIndex='1'\r\n            boxShadow='md'\r\n        >\r\n            <Box as={Link} to='/' fontSize='md' fontWeight='bold'>cmmrc</Box>\r\n            <Spacer />\r\n            <Flex\r\n                as={Link}\r\n                to='/cart'\r\n                pos='relative'\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                cursor='pointer'>\r\n                <Text fontSize='lg'><Icon icon=\"ant-design:shopping-cart-outlined\" /></Text>\r\n                <Circle\r\n                    pos='absolute'\r\n                    left='3'\r\n                    top='-3'\r\n                    fontSize='sm'\r\n                    fontWeight='bold'\r\n                    color='white'\r\n                    bgColor={context.colorScheme + `.900`}\r\n                    p='2'\r\n                    overflow='hidden'\r\n                    maxH='20px'>{cart?.line_items?.length}</Circle>\r\n                <Badge colorScheme={context.colorScheme} ml='6'>{cart?.subtotal?.formatted_with_code}</Badge>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n","import Commerce from '@chec/commerce.js'\r\n\r\nexport const commerce = new Commerce(process.env.REACT_APP_CHEC_PUBLIC_KEY, true);\r\n","import { Box, Divider, Flex, Heading, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nexport default function Review({checkoutToken}) {\r\n    return (\r\n        <Box>\r\n            <Heading fontSize='xl' my='6'>Podsumowanie zamówienia</Heading>\r\n            {checkoutToken.live.line_items.map(item => (\r\n                <Flex\r\n                    key={item.id}\r\n                    my='4'\r\n                    justifyContent='space-between'>\r\n                    <Box>\r\n                        <Text fontWeight='bold'>{item.name}</Text>\r\n                        {item.selected_options.length > 0 && item.selected_options.map(option => (\r\n                            <Text fontWeight='normal' fontSize='md' key={option.group_id}>\r\n                                {option.group_name === 'size' && 'Rozmiar: '}\r\n                                {option.group_name === 'color' && 'Kolor: '}\r\n                                {item.selected_options.map(opt => opt.option_name)}\r\n                            </Text>\r\n                        ))}\r\n                    </Box>\r\n                    <Text>{item.quantity + ` x ` + item.price.formatted_with_code}</Text>\r\n                    \r\n                </Flex>\r\n            ))}\r\n            <Divider />\r\n            <Flex fontWeight='bold' justifyContent='space-between' my='4'>\r\n                <Text>Cena za wszystko:</Text>\r\n                <Text color='green'>{checkoutToken.live.subtotal.formatted_with_code}</Text>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Box, Flex, Button, Spacer, Heading, Divider, useToast } from '@chakra-ui/react'\r\nimport { CommerceContext } from '../../App'\r\nimport Review from './Review'\r\nimport { Elements, ElementsConsumer, CardElement } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport { useState } from 'react'\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PK);\r\n\r\nexport default function Payment({setStep, shippingData, checkoutToken, onCaptureCheckout}) {\r\n    const context = useContext(CommerceContext)\r\n    const [isLoading, setLoading] = useState(false);\r\n    const toast = useToast();\r\n\r\n    const handleSubmit = async (event, elements, stripe) => {\r\n        event.preventDefault();\r\n\r\n        if (!stripe || !elements) return;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: cardElement\r\n        });\r\n\r\n        if (error) {\r\n            return toast({\r\n                title: \"Wystąpił błąd.\",\r\n                description: error.message,\r\n                status: \"error\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })\r\n        } else {\r\n            setLoading(true);\r\n            const orderData = {\r\n                line_items: checkoutToken.live.line_items,\r\n                customer: {\r\n                    firstname: shippingData.firstname,\r\n                    lastname: shippingData.lastname,\r\n                    email: shippingData.email,\r\n                },\r\n                fulfillment: { shipping_method: shippingData.shippingOption },\r\n                payment: {\r\n                    gateway: 'stripe',\r\n                    stripe: {\r\n                        payment_method_id: paymentMethod.id\r\n                    }\r\n                }\r\n            }\r\n            await onCaptureCheckout(checkoutToken.id, orderData);\r\n            setLoading(false);\r\n            setStep(3);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Review checkoutToken={checkoutToken} />\r\n            \r\n            {console.log(checkoutToken.live.line_items)}\r\n            <Divider />\r\n            <Box>\r\n                <Heading my='6' fontSize='xl'>Metoda płatności</Heading>\r\n                <Elements stripe={stripePromise}>\r\n                    <ElementsConsumer>\r\n                        {({elements, stripe}) => (\r\n                            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n                                <CardElement />\r\n                                <br /><br />\r\n                                <Flex>\r\n                                    <Button colorScheme={context.colorScheme} variant='outline' my='5'\r\n                                        onClick={()=>setStep(1)}>Wróć</Button>\r\n                                    <Spacer />\r\n                                    <Button\r\n                                        type='submit'\r\n                                        isDisabled={!stripe}\r\n                                        colorScheme={context.colorScheme}\r\n                                        isLoading={isLoading}\r\n                                        my='5'>\r\n                                        Zapłać ({checkoutToken.live.subtotal.formatted_with_code})\r\n                                    </Button>\r\n                                </Flex>\r\n                            </form>\r\n                        )}\r\n                    </ElementsConsumer>\r\n                </Elements>\r\n            </Box>\r\n            \r\n\r\n            \r\n        </Box>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/undraw_Done_re_oak4.920c7ab7.svg\";","import { Button, Flex, Heading, Image, Spacer } from '@chakra-ui/react'\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { CommerceContext } from '../../App'\r\nimport Illustration from '../../assets/undraw_Done_re_oak4.svg'\r\n\r\nexport default function Confirmation() {\r\n    const context = useContext(CommerceContext)\r\n    return (\r\n        <Flex flexDir='column' alignItems='center'>\r\n            <Heading my='6' fontSize='xl'>Twoje zamówienie zostało zarejestowane! 😎</Heading>\r\n            <Image src={Illustration} h='200px' />\r\n            \r\n            <Spacer />\r\n\r\n            <Button\r\n                as={Link}\r\n                to='/'\r\n                maxW='max-content'\r\n                my='6'\r\n                colorScheme={context.colorScheme}>Strona główna</Button>\r\n        </Flex>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport {\r\n    Box, Center, CircularProgress, CircularProgressLabel,\r\n    Container, Divider, Heading, Text, Flex, FormControl,\r\n    FormLabel, Input, FormHelperText, Button, Spacer, useToast\r\n} from '@chakra-ui/react'\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { CommerceContext } from '../../App';\r\nimport { commerce } from '../../lib/commerce'\r\nimport { Link } from 'react-router-dom';\r\nimport Payment from './Payment';\r\nimport Confirmation from './Confirmation';\r\n\r\nconst CustomInput = ({id, label, inputType = 'text', placeholder, helperText , register, isRequired}) => {\r\n    return (\r\n        <FormControl id={id} my='5' isRequired={isRequired}>\r\n            <FormLabel>{ label }</FormLabel>\r\n            <Input type={inputType} placeholder={placeholder} {...register(id)} />\r\n            <FormHelperText>{ helperText }</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default function Checkout({cart, onCaptureCheckout}) {\r\n    const [step, setStep] = useState(1);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const toast = useToast();\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n    const context = useContext(CommerceContext);\r\n    \r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, {type: 'cart'});\r\n\r\n                setCheckoutToken(token);\r\n            } catch (error) {\r\n                toast({\r\n                    title: \"Wystąpił błąd.\",\r\n                    description: \"Nie możemy wczytać ID zamówienia. Spróbuj ponownie później.\",\r\n                    status: \"error\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                });\r\n            }\r\n        }\r\n        generateToken();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const nextStep = (data) => {\r\n        data.preventDefault();\r\n\r\n        setShippingData({\r\n            firstname: data.target[0].value,\r\n            lastname: data.target[1].value,\r\n            email: data.target[2].value,\r\n        });\r\n\r\n        setStep(2);\r\n    }\r\n    const ClientInfo = () => (\r\n        <Box as='form' onSubmit={(e) => nextStep(e)}>\r\n            <CustomInput\r\n                id='firstname'\r\n                label='Imię'\r\n                placeholder='Jan'\r\n                isRequired\r\n                register={register} />\r\n            <CustomInput\r\n                id='lastname'\r\n                label='Nazwisko'\r\n                placeholder='Kowalski'\r\n                isRequired\r\n                register={register} />\r\n            <CustomInput\r\n                id='email'\r\n                label='E-mail'\r\n                type='email'\r\n                placeholder='jan_kowalski@example.com'\r\n                helperText='Nigdy nie udostępniamy twojego adresu e-mail.'\r\n                isRequired\r\n                register={register} />\r\n            {/* <CustomInput\r\n                id='tel'\r\n                type='tel'\r\n                label='Telefon'\r\n                placeholder='123 456 789'\r\n                isRequired\r\n                register={register} /> */}\r\n            \r\n            <Flex>\r\n                <Button\r\n                    as={Link}\r\n                    to='/cart'\r\n                    colorScheme={context.colorScheme}\r\n                    variant='outline'\r\n                    my='5'>Wróć do koszyka</Button>\r\n                <Spacer />\r\n                <Button\r\n                    colorScheme={context.colorScheme}\r\n                    my='5'\r\n                    type='submit'>Dalej</Button>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n    const handleCheckValue = () => {\r\n        if (step === 1) return '0';\r\n        if (step === 2) return '50';\r\n        if (step === 3) return '100';\r\n        return 0;\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            border='1px'\r\n            borderRadius='lg'\r\n            my='6'\r\n            minH='400px'>\r\n            <Heading fontSize='3xl' py='6'>\r\n                <Center>Checkout</Center>\r\n            </Heading>\r\n\r\n            <Divider />\r\n\r\n            {/* top bar */}\r\n            <Flex\r\n                py='2'\r\n                alignItems='center'\r\n                justifyContent='space-between'>\r\n                <CircularProgress value={handleCheckValue()} thickness='5px' size='50px'>\r\n                    <CircularProgressLabel>{handleCheckValue()}%</CircularProgressLabel>\r\n                </CircularProgress>\r\n                <Text fontSize='xl' ml='6' flex='1'>\r\n                    {step === 1 && 'Dane kontaktowe'}\r\n                    {step === 2 && 'Płatność'}\r\n                    {step === 3 && 'Potwierdzenie zamówienia'}\r\n                </Text>\r\n            </Flex>\r\n\r\n            <Divider />\r\n\r\n            <FormProvider>\r\n                {step === 1 &&\r\n                    <ClientInfo setStep={setStep} />}\r\n                {step === 2 &&\r\n                    <Payment\r\n                        onCaptureCheckout={onCaptureCheckout}\r\n                        shippingData={shippingData}\r\n                        checkoutToken={checkoutToken}\r\n                        onSubmit={onSubmit}\r\n                        setStep={setStep}\r\n                        handleSubmit={handleSubmit} />}\r\n                {step === 3 &&\r\n                    <Confirmation />\r\n                }\r\n            </FormProvider>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/undraw_empty_xct9.927aee13.svg\";","import {\r\n    Flex, Image, Badge, Text, Spacer, Center, Box,\r\n} from '@chakra-ui/react'\r\nimport { CommerceContext } from '../../../App'\r\nimport { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Item({ item }) {\r\n    const context = useContext(CommerceContext);\r\n    return (\r\n        <Flex\r\n            w='100%'\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"lg\"\r\n            key={item.id}\r\n            p='2'\r\n            my='5'>\r\n            <Image\r\n                src={item.media.source}\r\n                maxW={['100px', '130px']}\r\n                maxH={['100px', '100%']}\r\n                mr='5'\r\n                borderRadius='lg'\r\n                loading='lazy'\r\n            />\r\n            <Flex\r\n                w='100%'\r\n                overflow='hidden'\r\n                flexWrap='wrap'>\r\n                <Flex\r\n                    pos='relative'\r\n                    flexDir='column'\r\n                    w='100%'\r\n                    justifyContent='space-between'\r\n                    fontSize={['sm', 'lg']}\r\n                    fontWeight='bold'>\r\n                    \r\n                    <Flex flexDir='column' h='100%'>\r\n                        <Text \r\n                            as={Link}\r\n                            to={`/przedmiot/${item.permalink}`}\r\n                            isTruncated\r\n                            maxW='100%'>{item.name}</Text>\r\n                        \r\n                        <Badge w='max-content' colorScheme={context.colorScheme}>{ item.price.formatted_with_code }</Badge>\r\n                        \r\n                        {item.selected_options.length > 0 && item.selected_options.map(option => (\r\n                            <Text fontWeight='normal' fontSize='md' key={option.group_id}>\r\n                                {option.group_name === 'size' && 'Rozmiar: '}\r\n                                {option.group_name === 'color' && 'Kolor: '}\r\n                                {item.selected_options.map(opt => opt.option_name)}\r\n                            </Text>\r\n                        ))}\r\n                        \r\n                        <Spacer />\r\n                        <Box color='green'>\r\n                            {item.quantity * item.price.raw} PLN\r\n                        </Box>\r\n                    </Flex>\r\n\r\n                    <Flex\r\n                        pos='absolute'\r\n                        right='2'\r\n                        top='50%'\r\n                        transform='translateY(-50%)'\r\n                        bgColor='white'\r\n                        flexDir='column'\r\n                        borderRadius='xl'\r\n                        borderWidth='1px'\r\n                        boxShadow='sm'\r\n                        overflow='hidden'>\r\n                        <Center\r\n                            cursor='pointer'\r\n                            _active={{\r\n                                transform: 'scale(0.98)',\r\n                            }}\r\n                            onClick={() => { context.handleUpdateItem(item.id, item.quantity+1)}}\r\n                        >+</Center>\r\n                        \r\n                        <Center\r\n                            px='2'\r\n                            flex='1'\r\n                            borderRadius='lg'\r\n                            fontSize={['sm', 'lg']}>\r\n                            {item.quantity}\r\n                        </Center>\r\n                        \r\n                        <Center\r\n                            cursor='pointer'\r\n                            _active={{\r\n                                transform: 'scale(0.98)',\r\n                            }}\r\n                            onClick={() => { context.handleUpdateItem(item.id, item.quantity - 1)}}\r\n                        >-</Center>\r\n                    </Flex>\r\n                </Flex>\r\n                <Spacer />\r\n                \r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n","import { Center, Spinner } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <Center\r\n            pos='absolute'\r\n            top='0'\r\n            h='100vh'\r\n            w='100%'>\r\n            <Spinner size='lg' />\r\n        </Center>\r\n    )\r\n}\r\n","import {\r\n    Button, Box, Image, Text, Flex, Center, Tooltip, Divider, Heading,\r\n} from '@chakra-ui/react'\r\nimport { DeleteIcon } from '@chakra-ui/icons'\r\nimport { useContext } from 'react'\r\nimport { CommerceContext } from '../../App'\r\nimport EmptySVG from '../../assets/undraw_empty_xct9.svg'\r\nimport Item from './item/Item'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../../components/utils/Loader'\r\n\r\nexport default function Cart({items}) {\r\n    const context = useContext(CommerceContext);\r\n    const isEmpty = () => (\r\n        <Center pos='relative'>\r\n            <Image src={EmptySVG} maxH='60vh'></Image>\r\n        </Center>\r\n    )\r\n    if (!items.line_items) return <Loader />;\r\n    return (\r\n        <Flex flexDir={['column', 'column', 'column', 'row']}>\r\n            <Box\r\n                p='6'\r\n                flex='1'>\r\n                <Heading>Twój koszyk</Heading>\r\n                <Flex\r\n                    justifyContent='space-between'\r\n                    alignItems='center'\r\n                    fontSize='sm'\r\n                    fontWeight='normal'>\r\n                    <Text>{ items.line_items.length } przed.</Text>\r\n                    {items.line_items.length ? (\r\n                        <Tooltip label='Wyczyść koszyk' hasArrow>\r\n                            <Center\r\n                                onClick={()=>context.handleClearCart()}\r\n                                cursor='pointer'\r\n                                w='50px'\r\n                                py='2'\r\n                                fontSize='lg'>\r\n                                <DeleteIcon />\r\n                            </Center>\r\n                        </Tooltip>\r\n                    ) : null}\r\n                </Flex>\r\n                <Box>\r\n                    {items.line_items.length === 0 ? isEmpty() : null}\r\n                    {items.line_items.map(item => (\r\n                        <Item item={item} key={item.id} />\r\n                    ))}\r\n                </Box>\r\n            </Box>\r\n            \r\n            {/* right box / checkout box */}\r\n            {items.line_items.length !== 0 && (\r\n                <Box\r\n                    p='6'\r\n                    maxW={['100%', '100%', '100%', '400px']}\r\n                    w='100%'\r\n                    minH='200px'\r\n                    bgColor={context.colorScheme + `.100`}>\r\n                    <Flex flexDir='column' h='100%'>\r\n                        <Box textTransform='uppercase' fontSize='sm' py='6'>\r\n                            <Flex justifyContent='space-between'>\r\n                                <Text>Cena za wszystko</Text>\r\n                                <Text>{items.subtotal.formatted_with_code}</Text>\r\n                            </Flex>\r\n                        </Box>\r\n\r\n                        <Divider borderColor='black' />\r\n                        \r\n                        <Flex\r\n                            justifyContent='space-between'\r\n                            textTransform='uppercase'\r\n                            fontWeight='bold'\r\n                            fontSize={['sm', 'lg']}\r\n                            py='6'>\r\n                            <Text>Razem (z VAT)</Text>\r\n                            <Text ml='2' color='green'>{ items?.subtotal?.formatted_with_code }</Text>\r\n                        </Flex>\r\n                        <Center>\r\n                            <Button\r\n                                as={Link}\r\n                                to='/checkout'\r\n                                colorScheme={context.colorScheme}\r\n                                >Zamawiam</Button>\r\n                        </Center>\r\n                    </Flex>\r\n                </Box>\r\n            )}\r\n        </Flex>\r\n    )\r\n}\r\n","import { Box, Button, Container, Divider, Flex, Heading, Image, Spacer, Text } from '@chakra-ui/react';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { CommerceContext } from '../../App';\r\nimport { ShowGroupsIfExists } from '../../components/Product/Functions';\r\nimport Loader from '../../components/utils/Loader';\r\nimport { commerce } from '../../lib/commerce';\r\n\r\nexport default function Item() {\r\n    const params = useParams('permalink');\r\n    const permalink = params.permalink;\r\n\r\n    const [data, setData] = useState({})\r\n    const [variant, setVariant] = useState({})\r\n\r\n    const context = useContext(CommerceContext)\r\n    \r\n    const getItemData = async () => {\r\n        const data = await commerce.products.retrieve(permalink, {type: 'permalink'});\r\n        setData(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getItemData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(() => {\r\n        if (data.variant_groups && data.variant_groups.length > 0) {\r\n            data.variant_groups.map(group => group.name === 'size' && setVariant(group.options[0]));\r\n        }\r\n    }, [data])\r\n\r\n    if (Object.keys(data).length === 0) {\r\n        return <Loader />\r\n    }\r\n    return (\r\n        <Container\r\n            as={Flex}\r\n            flexDir={['column', 'column', 'row']}\r\n            pos='relative'\r\n            maxW='1200px'\r\n            borderWidth='1px'\r\n            my='6' p='6'\r\n            justifyContent='space-between'>\r\n            {data.is.sold_out && (\r\n                <Flex\r\n                    pos='absolute'\r\n                    top='0'\r\n                    left='0'\r\n                    w='100%'\r\n                    h='100%'\r\n                    bgColor='whiteAlpha.600'\r\n                    zIndex='1'\r\n                    flexDir='column'\r\n                    justifyContent='center'\r\n                    alignItems='center'\r\n                    userSelect='none'\r\n                >\r\n                    <Heading textTransform='uppercase'>Wyprzedane</Heading>\r\n                    <Button\r\n                        as={Link}\r\n                        to='/'\r\n                        mt='6'\r\n                        variant='outline'\r\n                        colorScheme={context.colorScheme}>\r\n                        Powrót do strony głównej\r\n                    </Button>\r\n                </Flex>\r\n            )}\r\n            <Flex\r\n                justifyContent='center'\r\n                w='100%'\r\n                borderRadius='lg'>\r\n                <Image\r\n                    src={data.media.source}\r\n                    w='100%'\r\n                    maxW='400px'\r\n                    h='400px'\r\n                    objectPosition='center'\r\n                    objectFit='contain'\r\n                    borderRadius='lg'\r\n                />\r\n            </Flex>\r\n            <Flex\r\n                flexDir='column'\r\n                maxW={['100%', '100%','50%','50%']}\r\n                w='100%'\r\n                mt={['6', '6','0','0']}\r\n                ml={['0', '0','6','6']}\r\n                p='2'>\r\n                \r\n                <Box>\r\n                    <Heading fontSize='xl'>{ data.name }</Heading>\r\n                    <Text my='2' dangerouslySetInnerHTML={{\r\n                        __html: data.description\r\n                    }} />\r\n\r\n                    <Divider borderColor='black' />\r\n\r\n                    <Heading\r\n                        my='6'\r\n                        fontSize='2xl'\r\n                        color='green'>{data.price.formatted_with_code}</Heading>\r\n                    \r\n                    {ShowGroupsIfExists(data.variant_groups, variant, setVariant, context.colorScheme)}\r\n                </Box>\r\n                \r\n                <Spacer />\r\n\r\n                <Box>\r\n                    <Button\r\n                        onClick={() => context.checkBeforeAddingToCart(data.id, data.variant_groups, variant, data.is.sold_out)}\r\n                        w='100%'\r\n                        mt='6'\r\n                        isDisabled={data.is.sold_out}\r\n                        colorScheme={context.colorScheme}>Dodaj do koszyka</Button>\r\n                </Box>\r\n            </Flex>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useToast, SimpleGrid } from '@chakra-ui/react';\nimport Product from './components/Product/Product';\nimport Navbar from './components/Navbar/Navbar';\nimport Checkout from './views/checkout/Checkout';\nimport Cart from './views/cart/Cart';\nimport { commerce } from './lib/commerce'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Item from './views/item/Item';\nimport Loader from './components/utils/Loader';\n\nconst COLOR_SCHEME = 'blue';\n\nexport const CommerceContext = React.createContext({\n  handleUpdateItem: () => { },\n  handleClearCart: () => { },\n  checkBeforeAddingToCart: () => {},\n  colorScheme: ''\n});\n\nexport default function App() {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const toast = useToast();\n  const [order, setOrder] = useState({});\n\n  const fetchProducts = async () => {\n    try {\n      const { data } = await commerce.products.list();\n      setProducts(data);\n    } catch (error) {\n      toast({\n        title: \"Nie można pobrać danych sklepu.\",\n        description: \"Twoje połączenie może być niestabilne.\",\n        status: \"error\",\n      })\n    }\n  }\n\n  const fetchCart = async () => {\n    try {\n      const res = await commerce.cart.retrieve();\n      setCart(res);\n    } catch (error) {\n      toast({\n        title: \"Nie można pobrać danych koszyka.\",\n        description: \"Twoje połączenie może być niestabilne.\",\n        status: \"error\",\n      })\n    }\n  }\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.refresh();\n\n    setCart(newCart);\n  }\n\n  const handleAddToCart = async (productId, quantity, variant) => {\n    try {\n      const item = await commerce.cart.add(productId, quantity, variant);\n      setCart(item.cart);\n      toast({\n        title: \"Dodano przedmiot do koszyka.\",\n        description: \"Sprawdź swój koszyk.\",\n        status: \"success\",\n        duration: 9000,\n        isClosable: true,\n      })\n    } catch (error) {\n      toast({\n        title: \"Wystąpił nieoczekiwany błąd.\",\n        description: \"Nie udało się dodać przedmiotu.\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      })\n    }\n  }\n  const checkBeforeAddingToCart = (productId, variantGroups, variant, isSoldOut = false) => {\n\t\tif (isSoldOut) {\n\t\t\treturn false;\n\t\t}\n\t\tif (variantGroups.length === 0) {\n\t\t\thandleAddToCart(productId, 1);\n\t\t} else {\n\t\t\tvariantGroups.map(group => {\n        const variantInfo = {\n          [group.id]: variant.id\n        }\n        handleAddToCart(productId, 1, variantInfo)\n        return true;\n\t\t\t});\n\t\t}\n\t}\n  \n  const handleClearCart = async () => {\n    const item = await commerce.cart.empty();\n    setCart(item.cart);\n    toast({\n      title: \"Wyczyszczono koszyk.\",\n      description: \"Twój koszyk jest od teraz pusty 😥\",\n      status: \"success\",\n      duration: 9000,\n      isClosable: true,\n    })\n  }\n\n  const handleCaptureCheckout = async (checkoutTokenID, newOrder) => {\n    try {\n      const incomingOrder = await commerce.checkout.capture(checkoutTokenID, newOrder);\n\n      setOrder(incomingOrder);\n      refreshCart();\n      return true;\n    } catch (error) {\n      toast({\n        title: \"Nie możemy przeanalizować Twojego zamówienia.\",\n        description: \"Wystąpił problem z zakupem przedmiotu. Spróbuj ponownie później.\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      return false;\n    }\n  }\n\n  const handleUpdateItem = async (id, quantity) => {\n    const item = await commerce.cart.update(id, {quantity});\n    setCart(item.cart);\n  }\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  if (!cart) return 'loading...';\n\n  return (\n    <CommerceContext.Provider\n      value={{\n        handleUpdateItem,\n        handleClearCart,\n        colorScheme: COLOR_SCHEME,\n        checkBeforeAddingToCart\n      }}>\n      <Router>\n        <Navbar cart={cart}\n          onClearCart={handleClearCart}\n        />\n        <Switch>\n          <Route exact path='/'>\n            <SimpleGrid spacing='5' mt='5' minChildWidth='300px' justifyItems='center'>\n              {Object.keys(cart).length > 0 ? (\n                <>\n                  { products.map(product => (\n                    product.is.active && (\n                      <Product\n                        product={product}\n                        key={product.id}\n                        onAddToCart={handleAddToCart} />\n                    )\n                  )) }\n                </>\n              ) : (\n                <Loader />\n              )}\n            </SimpleGrid>\n          </Route>\n          <Route exact path='/cart'><Cart items={cart} /></Route>\n          <Route exact path='/checkout'>\n            <Checkout\n              order={order}\n              onCaptureCheckout={handleCaptureCheckout}\n              cart={cart} />\n          </Route>\n          <Route exact path='/przedmiot/:permalink'>\n              <Item />\n          </Route>\n        </Switch>\n      </Router>\n    </CommerceContext.Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}